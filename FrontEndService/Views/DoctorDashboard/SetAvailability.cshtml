@* @model FrontEndService.Models.WebDTO.SlotDTO.SlotDTO

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/styles.css"> <!-- Link to your CSS file -->
    <style>
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>
    <div id="availabilityModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="hideAvailabilityModal()">&times;</span>
            <h2>Set Availability</h2>
            @using (Html.BeginForm("CreateSlot", "DoctorDashboard", FormMethod.Post))
            {
                <div>
                    @Html.LabelFor(model => model.DateTime)
                    @Html.TextBoxFor(model => model.DateTime, new { type = "datetime-local", @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
                </div>
                <button type="submit">Save Availability</button>
            }
        </div>
    </div>

    <script>
        function showAvailabilityModal() {
            document.getElementById('availabilityModal').style.display = 'block';
        }

        function hideAvailabilityModal() {
            document.getElementById('availabilityModal').style.display = 'none';
        }
    </script>
</body>
</html>
 *@

@* @model List<FrontEndService.Models.WebDTO.SlotDTO.SlotDTO>

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/styles.css"> <!-- Link to your CSS file -->
    <style>
        /* Additional CSS for alignment and rounded text */
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

            li .slot-info {
                display: inline-block;
                width: 60%;
                border: 1px solid #ccc;
                padding: 10px;
                border-radius: 20px; /* Rounded corners */
            }

            li .slot-actions {
                display: inline-block;
                width: 30%;
                text-align: right;
            }

        button {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Set Availability</h1>

        <!-- Display existing slots -->
        <h2>Existing Slots</h2>
        @if (Model != null && Model.Count > 0)
        {
            <ul>
                @foreach (var slot in Model)
                {
                    <li>
                        <div class="slot-info">
                            @slot.DateTime
                        </div>
                        <div class="slot-actions">
                            <button onclick="showEditModal('@slot.SlotId')">Edit</button>
                            <form asp-action="DeleteSlot" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@slot.DateTime" />
                                <button type="submit">Delete</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No slots available.</p>
        }

        <!-- Form to add new slot -->
        <h2>Add New Slot</h2>
        @using (Html.BeginForm("CreateSlot", "DoctorDashboard", FormMethod.Post))
        {
            <div>
                <label for="DateTime">Date and Time:</label>
                <input type="datetime-local" id="DateTime" name="DateTime" required />
                @Html.ValidationMessageFor(model => model.FirstOrDefault().DateTime, "", new { @class = "text-danger" })
            </div>
            <button type="submit">Save Availability</button>
        }
    </div>

    <!-- Modal for Edit Slot -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="hideEditModal()">&times;</span>
            <h2>Edit Slot</h2>
            @using (Html.BeginForm("EditSlot", "DoctorDashboard", FormMethod.Post))
            {
                <input type="hidden" id="editSlotId" name="Id" />
                <div>
                    <label for="editDateTime">Date and Time:</label>
                    <input type="datetime-local" id="editDateTime" name="DateTime" required />
                </div>
                <button type="submit">Update Availability</button>
            }
        </div>
    </div>

    <script>
        function showEditModal(slotId) {
            document.getElementById('editSlotId').value = slotId;
            document.getElementById('editModal').style.display = 'block';
        }

        function hideEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }
    </script>
</body>
</html>

 *@

@* @model List<FrontEndService.Models.WebDTO.SlotDTO.SlotDTO>

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/styles.css"> <!-- Link to your CSS file -->
    <style>
        /* Additional CSS for alignment and rounded text */
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        .slot-info {
            display: inline-block;
            width: 60%;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 20px; /* Rounded corners */
        }

        .slot-actions {
            display: inline-block;
            width: 30%;
            text-align: right;
        }

        button {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Style for modal */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>Set Availability</h1>

        <!-- Display existing slots -->
        <h2>Existing Slots</h2>
        @if (Model != null && Model.Count > 0)
        {
            <ul>
                @foreach (var slot in Model)
                {
                    <li>
                        <div class="slot-info">
                            @slot.DateTime
                        </div>
                        <div class="slot-actions">
                            <button onclick="showEditModal('@slot.SlotId')">Edit</button>
                            <form asp-action="DeleteSlot" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@slot.SlotId" />
                                <button type="submit">Delete</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No slots available.</p>
        }

        <!-- Form to add new slot -->
        <h2>Add New Slot</h2>
        @using (Html.BeginForm("CreateSlot", "DoctorDashboard", FormMethod.Post))
        {
            <div>
                <label for="DateTime">Date and Time:</label>
                <input type="datetime-local" id="DateTime" name="DateTime" required />
                @Html.ValidationMessageFor(model => model.FirstOrDefault().DateTime, "", new { @class = "text-danger" })
            </div>
            <button type="submit">Save Availability</button>
        }
    </div>

    <!-- Modal for Edit Slot -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="hideEditModal()">&times;</span>
            <h2>Edit Slot</h2>
            @using (Html.BeginForm("EditSlot", "DoctorDashboard", FormMethod.Post))
            {
                <input type="hidden" id="editSlotId" name="id" />
                <div>
                    <label for="editDateTime">Date and Time:</label>
                    <input type="datetime-local" id="editDateTime" name="DateTime" required />
                </div>
                <button type="submit">Update Availability</button>
            }
        </div>
    </div>

    <script>
        function showEditModal(slotId) {
            document.getElementById('editSlotId').value = slotId;
            document.getElementById('editModal').style.display = 'block';
        }

        function hideEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }
    </script>
</body>
</html>
 














 @model List<FrontEndService.Models.WebDTO.SlotDTO.SlotDTO>

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/styles.css"> <!-- Link to your CSS file -->
    <style>
        /* Additional CSS for alignment and rounded text */
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        .slot-info {
            display: inline-block;
            width: 60%;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 20px; /* Rounded corners */
        }

        .slot-actions {
            display: inline-block;
            width: 30%;
            text-align: right;
        }

        button {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Style for modal */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
 <body>
    <div class="container">
        <h1>Set Availability</h1>

        <!-- Display existing slots -->
        <h2>Existing Slots</h2>
        @if (Model != null && Model.Count > 0)
        {
            <ul>
                @foreach (var slot in Model)
                {
                    <li>
                        <div class="slot-info">
                            @slot.DateTime
                        </div>
                        <div class="slot-actions">
                            @* <button onclick="showEditModal('@slot.SlotId', '@slot.DateTime')">Edit</button>
                            <form asp-action="DeleteSlot" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@slot.SlotId" />
                                <button type="submit">Delete</button> 
                            <button onclick="showEditModal('@slot.SlotId', '@slot.DateTime')">Edit</button>
                            <button onclick="showDeleteModal('@slot.SlotId')">Delete</button>

                            
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No slots available.</p>
        }

        <!-- Form to add new slot -->
        <h2>Add New Slot</h2>
        @using (Html.BeginForm("CreateSlot", "DoctorDashboard", FormMethod.Post))
        {
            <div>
                <label for="DateTime">Date and Time:</label>
                <input type="datetime-local" id="DateTime" name="DateTime" required />
                @Html.ValidationMessageFor(model => model.FirstOrDefault().DateTime, "", new { @class = "text-danger" })
            </div>
            <button type="submit">Save Availability</button>
        }
    </div>

    <!-- Modal for Edit Slot -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="hideEditModal()">&times;</span>
            <h2>Edit Slot</h2>
            @using (Html.BeginForm("EditSlot", "DoctorDashboard", FormMethod.Post))
            {
                <input type="hidden" id="editSlotId" name="Id" />
                <div>
                    <label for="editDateTime">Date and Time:</label>
                    <input type="datetime-local" id="editDateTime" name="DateTime" required />
                </div>
                <button type="submit">Update Availability</button>
            }
        </div>
    </div>

    <!-- Modal for Delete Slot -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="hideDeleteModal()">&times;</span>
            <h2>Delete Slot</h2>
            <p>Are you sure you want to delete this slot?</p>
            @using (Html.BeginForm("DeleteSlot", "DoctorDashboard", FormMethod.Post))
            {
                <input type="hidden" id="deleteSlotId" name="id" />
                <button type="submit">Delete</button>
            }
        </div>
    </div>

    <script>
        function showEditModal(slotId, dateTime) {
            console.log("Edit button clicked. Slot ID: " + slotId + ", DateTime: " + dateTime);
            document.getElementById('editSlotId').value = slotId;
            document.getElementById('editDateTime').value = dateTime;
            document.getElementById('editModal').style.display = 'block';
        }

        function hideEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        function showDeleteModal(slotId) {
            console.log("Delete button clicked. Slot ID: " + slotId);
            document.getElementById('deleteSlotId').value = slotId;
            document.getElementById('deleteModal').style.display = 'block';
        }

        function hideDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }
    </script>
</body> 



</html>
 













 



@model List<FrontEndService.Models.WebDTO.SlotDTO.SlotDTO>

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Bootstrap JavaScript -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* Additional CSS for alignment and rounded text */
        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        .slot-info {
            display: inline-block;
            width: 60%;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 20px; /* Rounded corners */
        }

        .slot-actions {
            display: inline-block;
            width: 30%;
            text-align: right;
            vertical-align: top; /* Align buttons to the top of the slot-actions div */
        }

        .btn-edit {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
            background-color: #007bff; /* Blue */
            color: #fff;
            border: none;
        }

        .btn-delete {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
            background-color: #dc3545; /* Red */
            color: #fff;
            border: none;
        }

        /* Style for modal */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>
    <div class="container">
        <h1>Set Availability</h1>

        <!-- Display existing slots -->
        <h2>Existing Slots</h2>
        @if (Model != null && Model.Count > 0)
        {
            <ul>
                @foreach (var slot in Model)
                {
                    <li>
                        <div class="slot-info">
                            @slot.DateTime
                        </div>
                        <div class="slot-actions">
                            <!-- Edit link -->
                            <button class="btn btn-edit" data-id="@slot.SlotId">Edit</button>
                            <!-- Delete form -->
                            <form asp-action="DeleteSlot" asp-controller="DoctorDashboard" method="post" style="display: inline;">
                                <input type="hidden" name="id" value="@slot.SlotId" />
                                <button type="submit" class="btn btn-delete">Delete</button>
                            </form>
                        </div>
                    </li>
                    <!-- Edit Slot Form -->
                    <li id="editSlotForm-@slot.SlotId" style="display: none;">
                        <form asp-action="EditSlot" asp-controller="DoctorDashboard" method="post">
                            <input type="hidden" name="id" value="@slot.SlotId" />
                            <label>Edit Slot DateTime:</label>
                            <input type="datetime-local" name="DateTime" value="@slot.DateTime" required />
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary cancel-edit" data-id="@slot.SlotId">Cancel</button>
                        </form>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No slots available.</p>
        }
    </div>

    <script>
        // Show edit form on edit button click
        $(document).ready(function () {
            $('.btn-edit').on('click', function () {
                var slotId = $(this).data('id');
                // Hide other edit forms if visible
                $('[id^="editSlotForm-"]').hide();
                // Show current edit form
                $('#editSlotForm-' + slotId).show();
            });

            // Cancel edit form
            $('.cancel-edit').on('click', function () {
                var slotId = $(this).data('id');
                $('#editSlotForm-' + slotId).hide();
            });
        });
    </script>
</body>
</html>
*@



@model List<FrontEndService.Models.WebDTO.SlotDTO.SlotDTO>

@{
    ViewData["Title"] = "Set Availability";
    Layout = null; // Ensure no default layout is applied
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Additional CSS for alignment and styling */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
        }

        .container {
            margin-top: 30px;
        }

        h1, h2 {
            color: #007bff;
        }

        .slot-info {
            display: inline-block;
            width: 60%;
            padding: 10px;
            border-radius: 20px;
            background-color: #e9ecef;
            border: 1px solid #ccc;
        }

        .slot-actions {
            display: inline-block;
            width: 30%;
            text-align: right;
            vertical-align: top;
        }

        .btn-edit, .btn-delete {
            padding: 5px 10px;
            margin-left: 5px;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-edit {
            background-color: #007bff;
            color: #fff;
            border: none;
        }

            .btn-edit:hover {
                background-color: #0056b3;
            }

        .btn-delete {
            background-color: #dc3545;
            color: #fff;
            border: none;
        }

            .btn-delete:hover {
                background-color: #c82333;
            }

        .form-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .text-danger {
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Set Availability</h1>

        <!-- Display existing slots -->
        <div class="form-container mb-4">
            <h2>Existing Slots</h2>
            @if (Model != null && Model.Count > 0)
            {
                <ul>
                    @foreach (var slot in Model)
                    {
                        <li class="mb-3">
                            <div class="slot-info">
                                @slot.DateTime.ToString()
                            </div>
                            <div class="slot-actions">
                                <a class="btn btn-edit" href="@Url.Action("EditSlot", "DoctorDashboard", new { id = slot.SlotId })">Edit</a>
                                <form asp-action="DeleteSlot" asp-controller="DoctorDashboard" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@slot.SlotId" />
                                    <button type="submit" class="btn btn-delete">Delete</button>
                                </form>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No slots available.</p>
            }
        </div>

        <!-- Form to add new slot -->
        <div class="form-container">
            <h2>Add New Slot</h2>
            @using (Html.BeginForm("CreateSlot", "DoctorDashboard", FormMethod.Post))
            {
                <div class="form-group">
                    <label for="DateTime">Date and Time:</label>
                    <input type="datetime-local" id="DateTime" name="DateTime" class="form-control" required />
                    @Html.ValidationMessageFor(model => model.FirstOrDefault().DateTime, "", new { @class = "text-danger" })
                </div>
                <button type="submit" class="btn btn-primary">Save Availability</button>
            }
        </div>
    </div>

    <script>
        // Function to open edit form and load content
        function openEditForm(slotId) {
            fetch('@Url.Action("EditSlotForm", "DoctorDashboard")?id=' + slotId)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('editFormContainer').innerHTML = html;
                })
                .catch(error => console.error('Error loading edit form:', error));
        }
    </script>
</body>
</html>
